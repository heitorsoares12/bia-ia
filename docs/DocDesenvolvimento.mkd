# üìÑ Documento de Desenvolvimento do Chatbot IA - Evento de Tintas

## 1. üéØ Introdu√ß√£o

Este documento descreve o escopo, arquitetura, tecnologias e etapas de desenvolvimento para o projeto de um chatbot com IA integrado ao site da **Brancotex**, destinado a atender visitantes em um **evento de tintas em S√£o Paulo**.

O objetivo √© fornecer um canal de atendimento autom√°tico que:

* Auxilie os clientes na escolha de produtos.
* Colete dados para a√ß√µes de marketing futuras, em conformidade com a **LGPD**.

> ‚ö†Ô∏è **Observa√ß√£o:** O site ser√° rodado em um **tablet**, que ficar√° em um **totem na feira**, sendo no m√°ximo **5 tablets simult√¢neos**.

## 2. üî• Objetivos

* **Atendimento em tempo real:** Permitir que os visitantes do evento conversem com o chatbot para tirar d√∫vidas sobre tintas e identificar a solu√ß√£o ideal.
* **Coleta de Leads:** Coletar dados (**Nome, E-mail, Telefone, CNPJ**) com consentimento expl√≠cito √† LGPD antes de iniciar a conversa.
* **Registro de Intera√ß√µes:** Armazenar todas as mensagens trocadas (perguntas e respostas) em banco de dados para an√°lise e futuras campanhas de marketing.
* **Facilidade de Implanta√ß√£o:** Utilizar tecnologias com baixa curva de aprendizado e custos controlados, garantindo entrega r√°pida do MVP.

## 3. üó∫Ô∏è Escopo do Projeto

* **Formul√°rio Inicial:** Captura de dados pessoais e aceite da pol√≠tica de privacidade.
* **Chatbot IA:** Interface de chat baseada em **Next.js** e integra√ß√£o com a **OpenAI API**, treinada com os dados de tintas da Brancotex.
* **Persist√™ncia de Dados:** Salvamento de visitantes e hist√≥rico de mensagens em banco de dados **SQLite via Prisma**.
* **Feedback Final:** Captura de dados sobre como foi a experiencia do usu√°rio.
* **Painel Administrativo (Opcional):** P√°gina protegida para visualizar visitantes e conversas.
* **Deploy:** Publica√ß√£o da aplica√ß√£o em servidor **VPS da Hostinger**.

> ‚úÖ **A conversa com a IA deve iniciar com uma introdu√ß√£o personalizada, utilizando as informa√ß√µes do usu√°rio coletadas no formul√°rio. Assim, a IA j√° come√ßa o atendimento direcionada de acordo com o interesse do usu√°rio.**

## 4. üèóÔ∏è Arquitetura T√©cnica

A aplica√ß√£o segue princ√≠pios de **Clean Architecture**, organizada em camadas:

* **Domain:** Entidades e regras de neg√≥cio (Visitor, Message).
* **Application:** Casos de uso (gerenciar visitantes, processar chats, salvar mensagens).
* **Infrastructure:** Integra√ß√£o com banco de dados (**Prisma/SQLite**) e **OpenAI API**.
* **Interface:** P√°ginas e componentes do **Next.js (React)** para chat e painel administrativo.

## 5. üõ†Ô∏è Tecnologias e Ferramentas

* **Next.js 13+ com TypeScript**
* **Prisma + SQLite** (ORM e banco de dados local)
* **OpenAI SDK**
* **Hostinger VPS** (Node.js)
* **ESLint / Prettier**
* **PM2** (gerenciamento de processos)

## 6. üîÑ Fluxo de Usu√°rio e LGPD

1. Acesso √† p√°gina de chat no tablet (totem).
2. Formul√°rio inicial solicita **Nome, E-mail, Telefone, CNPJ** e aceite da **pol√≠tica de privacidade (LGPD)**.
3. **Valida√ß√£o e consentimento:** o chat √© bloqueado at√© o aceite do usu√°rio.
4. Armazenamento dos dados pessoais no banco.
5. **In√≠cio da conversa:** A IA inicia com uma **mensagem de introdu√ß√£o personalizada**, levando em considera√ß√£o os dados informados pelo usu√°rio e j√° direcionando para os produtos ou informa√ß√µes de interesse.
6. Intera√ß√£o de chat: perguntas do usu√°rio e respostas da IA.
7. Encerramento: todas as intera√ß√µes s√£o salvas e associadas ao visitante.

## 7. üóÑÔ∏è Banco de Dados

* **Visitor**

  * id
  * nome
  * email
  * telefone
  * cnpj
  * consentimento
  * createdAt

* **Message**

  * id
  * content
  * sender (user / bot)
  * timestamp
  * visitorId

## 8. üåê Endpoints e APIs

* **POST /api/visitor** ‚Üí Cria visitante e retorna `visitorId`.
* **POST /api/chat** ‚Üí Recebe `visitorId` e mensagem, salva no banco, consulta OpenAI e retorna a resposta.
* *(Opcional)* **GET /api/admin/visitors** ‚Üí Lista visitantes e conversas.

## 9. üõ†Ô∏è Painel Administrativo (Opcional)

* Rota protegida por autentica√ß√£o simples (**usu√°rio/senha via .env**).
* Interface para visualizar **leads** e o **hist√≥rico de chats**.

## 10. üöÄ Deploy na Hostinger

1. Provisionar VPS com ambiente Node.js.
2. Executar:

   ```bash
   git clone
   npm install
   # configurar arquivo .env
   npm run build
   pm2 start npm --name "chatbot" -- run start
   ```
3. Garantir que a aplica√ß√£o est√° rodando 24/7.

## 11. ‚úîÔ∏è Crit√©rios de Aceita√ß√£o

* Chat inicia **somente ap√≥s consentimento da LGPD**.
* Mensagens do usu√°rio e da IA s√£o **salvas no banco**.
* Chatbot responde com base nos dados fornecidos pela **Brancotex**.
* Aplica√ß√£o dispon√≠vel e funcional na **URL de produ√ß√£o**.
* *(Opcional)* Painel administrativo funcionando e protegido.

## 12. ‚úÖ Considera√ß√µes Finais

Este plano garante clareza sobre as etapas, entreg√°veis e responsabilidades t√©cnicas do projeto.

> ‚ö†Ô∏è Quaisquer altera√ß√µes de escopo devem ser negociadas previamente.

